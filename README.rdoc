== Sky-Tech-Test Guide 

This is a guide to running and operating a simple form handler for a simple set of JSON data. It makes use of an MVC approach using Ruby on Rails and implements best engineering practices to ensure that the application as simple as possible. 


== Dependencies:

* <tt>ruby '2.2.3'</tt>

* <tt>rails '~> 4'</tt>

Things you may want to cover:

<tt>rspec</tt>

<tt>capybara</tt>

<tt>guard-rspec</tt>

<tt>jbuilder</tt>



== Set up and running the application:

* fork or clone the app.

* if forked, clone from your server repostiory with <tt>git clone https://github.com/your-repo-name/sky-tech-test.git</tt>.

* (only if you are contributing)configure new remote upstream<tt>git remote add upstream https://github.com/morashid92/sky-tech-test.git</tt>.

* run bundle to fetch all libraries <tt>bundle</tt>.

* if you are using a mac machine you can type <tt>gem install rb-fsevent</tt> in the root directory to detect file changes with guard.

* migrate the database <tt>rake db:migrate</tt>.

* (only if you are contributing) switch to a new branch <tt>git checkout -b name_of_new_branch</tt>.

* start the rails server <tt>rails s</tt> and go into the browser to access the webpage on <tt>localhost:3000</tt>.


== Edit people using form:

* as soon as you run the app, you will see the home page with people data, to view json format simply add <tt>.json</tt> at the end of the URL.

* to edit any person click on  <tt>edit</tt> next to their names, change their names and click <tt>Update Person</tt>.

* you will be taken back to the home page and can see the changes. You may also check <tt>people.json</tt> to view the edited file in  <tt>json</tt> format.




== Contributing:

* add and commit your changes <tt>git commit -am "Add first draft of some feature"</tt>.

* fetch the upstream <tt>git pull upstream master</tt>.

* push your feature branch to your local repository <tt>git push origin name_of_branch</tt>.

* send pull request through main github repository by comparing <tt>name_of_branch</tt> and <tt>master</tt>.


== Testing:

* you can run the tests by running guard-rspec by simply entering <tt>guard</tt> in the terminal window in the  <tt>root</tt> folder of the application.

* guard-rspec will detect file changes and run the current test you have saved or alternatively, if you want to run all tests just hit <tt>Enter</tt>.
